Коротко по https://ru.bem.info/methodology/quick-start/

Основные понятия: 

	Блок:
		Функционально независимый компонент страницы, который может быть повторно использован.
		В HTML блоки представлены атрибутом class. 

	Элемент:
		Составная часть блока, которая не может использоваться в отрыве от него.

	Модификатор:

		Cущность, определяющая внешний вид, состояние или поведение блока либо элемента.
		Бывают булевые и ключ-значение.

	Микс:

		Прием, позволяющий использовать разные БЭМ-сущности на одном DOM-узле.




Фишки:
	Названия блока и элемента характеризуют смысл ("что это?").

	Блок:
		Не должен влиять на свое окружение, т. е. блоку не следует задавать внешнюю геометрию 
		(в виде отступов, границ, влияющих на размеры) и позиционирование. В CSS по БЭМ также 
		не рекомендуется использовать селекторы по тегам или id.

		Имя блока задает пространство имен, которое гарантирует зависимость элементов от блока (block__elem).

	Элемент:

		Вложенность
		Принадлежность
		Необязательность


		Элемент — всегда часть блока и не должен использоваться отдельно от него.

		Вложенность:
			Элементы можно вкладывать друг в друга.
			Допустима любая вложенность элементов.
			Элемент — всегда часть блока, а не другого элемента. Это означает, что в названии
			элементов нельзя прописывать иерархию вида block__elem1__elem2.

		Элемент — необязательный компонент блока. Не у всех блоков должны быть элементы.

	Модификатор:

		С точки зрения БЭМ-методологии модификатор не может использоваться в отрыве от 
		модифицируемого блока или элемента. Модификатор должен изменять вид, 
		поведение или состояние сущности, а не заменять ее.

		Булевый:
			Используют, когда важно только наличие или отсутствие модификатора, а его значение несущественно.
			Например, «отключен»: disabled. Считается, что при наличии булевого модификатора у
			сущности его значение равно true.

			Структура полного имени модификатора соответствует схеме:
				имя-блока_имя-модификатора;
				имя-блока__имя-элемента_имя-модификатора.
		Ключ-значение:

			Используют, когда важно значение модификатора.
			Например, «меню с темой оформления islands»: menu_theme_islands.

			Структура полного имени модификатора соответствует схеме:
				имя-блока_имя-модификатора_значение-модификатора;
				имя-блока__имя-элемента_имя-модификатора_значение-модификатора.


		Миксы:
			Миксы позволяют:
				совмещать поведение и стили нескольких сущностей без дублирования кода;
				создавать семантически новые компоненты интерфейса на основе имеющихся.
			Пример:

			<!-- Блок `header` -->
			<div class="header">
			    <!-- К блоку `search-form` примиксован элемент `search-form` блока `header`-->
			    <div class="search-form header__search-form"></div>
			</div>

			В данном примере мы совместили поведение и стили блока search-form и 
			элемента search-form блока header. Такой подход позволяет нам задать 
			внешнюю геометрию и позиционирование в элементе header__search-form,
			а сам блок search-form оставить универсальным. Таким образом, блок 
			можно использовать в любом другом окружении, потому что он не специфицирует
			никакие отступы. Это позволяет нам говорить о его независимости.
 



